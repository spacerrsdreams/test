generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Products {
  id                           String  @id
  title                        String
  price                        Float
  category                     String
  description                  String
  image                        String
  authorId                     String?
  User_Products_authorIdToUser User?   @relation("Products_authorIdToUser", fields: [authorId], references: [id])
  User_CartProducts            User[]  @relation("CartProducts")
  User_WishlistProducts        User[]  @relation("WishlistProducts")
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                               String     @id @default(uuid())
  email                            String?    @unique
  username                         String?    @unique
  name                             String?
  password                         String?
  createdAt                        DateTime   @default(now())
  updatedAt                        DateTime
  emailVerified                    DateTime?
  image                            String?
  resetPasswordExpires             DateTime?
  resetPasswordToken               String?       @unique
  emailVerificationCode            String?       @unique
  Account                          Account[]
  Products_Products_authorIdToUser Products[] @relation("Products_authorIdToUser")
  Session                          Session[]
  Products_CartProducts            Products[] @relation("CartProducts")
  Products_WishlistProducts        Products[] @relation("WishlistProducts")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
